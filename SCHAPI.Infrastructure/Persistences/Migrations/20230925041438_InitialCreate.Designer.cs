// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCHAPI.Infrastructure.Persistences.Contexts;

#nullable disable

namespace SCHAPI.Infrastructure.Persistences.Migrations
{
    [DbContext(typeof(SCHAPIContext))]
    [Migration("20230925041438_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SCHAPI.Domain.Entities.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("ClassroomCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasComputedColumnSql("CONCAT('AU', CAST(Id AS VARCHAR))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomCode")
                        .IsUnique();

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<string>("LessonCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasComputedColumnSql("CONCAT('CLA', RIGHT('000' + CAST(Id AS VARCHAR), 3))");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("LessonCode")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("ScheduleId", "ClassroomId")
                        .IsUnique();

                    b.HasIndex("ScheduleId", "TeacherId")
                        .IsUnique();

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.LessonStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("LessonId", "StudentId")
                        .IsUnique();

                    b.ToTable("LessonStudents");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartHour")
                        .HasColumnType("time");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasComputedColumnSql("CONCAT('ALU', RIGHT('000' + CAST(Id AS VARCHAR), 3))");

                    b.HasKey("Id");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasComputedColumnSql("CONCAT('MAT', RIGHT('000' + CAST(Id AS VARCHAR), 3))");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCode")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasComputedColumnSql("CONCAT('MAE', RIGHT('000' + CAST(Id AS VARCHAR), 3))");

                    b.HasKey("Id");

                    b.HasIndex("TeacherCode")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Lesson", b =>
                {
                    b.HasOne("SCHAPI.Domain.Entities.Classroom", "Classroom")
                        .WithMany("Lessons")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SCHAPI.Domain.Entities.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SCHAPI.Domain.Entities.Subject", "Subject")
                        .WithMany("Lessons")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SCHAPI.Domain.Entities.Teacher", "Teacher")
                        .WithMany("Lessons")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Schedule");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.LessonStudent", b =>
                {
                    b.HasOne("SCHAPI.Domain.Entities.Lesson", "Lesson")
                        .WithMany("Students")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("SCHAPI.Domain.Entities.Student", "Student")
                        .WithMany("Lessons")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Classroom", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Lesson", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Student", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Subject", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("SCHAPI.Domain.Entities.Teacher", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
